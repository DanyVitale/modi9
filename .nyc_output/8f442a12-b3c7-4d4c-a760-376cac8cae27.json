{"/home/usuario/modi9/src/index.ts":{"path":"/home/usuario/modi9/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":106}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":37}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":37}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":22}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":25}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":42}},"9":{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},"10":{"start":{"line":47,"column":8},"end":{"line":47,"column":37}},"11":{"start":{"line":53,"column":8},"end":{"line":53,"column":34}},"12":{"start":{"line":59,"column":8},"end":{"line":59,"column":33}},"13":{"start":{"line":66,"column":18},"end":{"line":66,"column":19}},"14":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"15":{"start":{"line":67,"column":21},"end":{"line":67,"column":22}},"16":{"start":{"line":68,"column":12},"end":{"line":68,"column":38}},"17":{"start":{"line":70,"column":8},"end":{"line":70,"column":19}},"18":{"start":{"line":73,"column":0},"end":{"line":73,"column":18}},"19":{"start":{"line":79,"column":8},"end":{"line":79,"column":26}},"20":{"start":{"line":85,"column":8},"end":{"line":85,"column":40}},"21":{"start":{"line":91,"column":8},"end":{"line":91,"column":39}},"22":{"start":{"line":98,"column":18},"end":{"line":98,"column":19}},"23":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"24":{"start":{"line":99,"column":21},"end":{"line":99,"column":22}},"25":{"start":{"line":100,"column":12},"end":{"line":100,"column":38}},"26":{"start":{"line":102,"column":8},"end":{"line":102,"column":19}},"27":{"start":{"line":105,"column":0},"end":{"line":105,"column":30}},"28":{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},"29":{"start":{"line":117,"column":8},"end":{"line":117,"column":38}},"30":{"start":{"line":123,"column":8},"end":{"line":123,"column":37}},"31":{"start":{"line":130,"column":18},"end":{"line":130,"column":19}},"32":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"33":{"start":{"line":131,"column":21},"end":{"line":131,"column":22}},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":38}},"35":{"start":{"line":134,"column":8},"end":{"line":134,"column":19}},"36":{"start":{"line":137,"column":0},"end":{"line":137,"column":26}},"37":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"38":{"start":{"line":145,"column":0},"end":{"line":145,"column":32}},"39":{"start":{"line":146,"column":0},"end":{"line":146,"column":37}},"40":{"start":{"line":147,"column":0},"end":{"line":147,"column":37}},"41":{"start":{"line":148,"column":0},"end":{"line":148,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":28},"end":{"line":11,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":20},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":10},"end":{"line":30,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":20}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":19}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":28},"end":{"line":48,"column":5}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":17},"end":{"line":54,"column":5}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":16},"end":{"line":60,"column":5}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":13},"end":{"line":71,"column":5}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":28},"end":{"line":80,"column":5}},"line":78},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":17},"end":{"line":86,"column":5}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":16},"end":{"line":92,"column":5}},"line":90},"12":{"name":"(anonymous_12)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":13},"end":{"line":103,"column":5}},"line":97},"13":{"name":"(anonymous_13)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":28},"end":{"line":112,"column":5}},"line":110},"14":{"name":"(anonymous_14)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":17},"end":{"line":118,"column":5}},"line":116},"15":{"name":"(anonymous_15)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":16},"end":{"line":124,"column":5}},"line":122},"16":{"name":"(anonymous_16)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":13},"end":{"line":135,"column":5}},"line":129},"17":{"name":"clientCode","decl":{"start":{"line":142,"column":9},"end":{"line":142,"column":19}},"loc":{"start":{"line":142,"column":31},"end":{"line":144,"column":1}},"line":142}},"branchMap":{},"s":{"0":1,"1":1,"2":13,"3":13,"4":3,"5":10,"6":10,"7":10,"8":1,"9":5,"10":5,"11":4,"12":4,"13":4,"14":4,"15":4,"16":20,"17":4,"18":1,"19":4,"20":3,"21":3,"22":3,"23":3,"24":3,"25":13,"26":3,"27":1,"28":4,"29":3,"30":3,"31":3,"32":3,"33":3,"34":12,"35":3,"36":1,"37":10,"38":1,"39":1,"40":1,"41":1},"f":{"0":13,"1":3,"2":10,"3":0,"4":0,"5":5,"6":4,"7":4,"8":4,"9":4,"10":3,"11":3,"12":3,"13":4,"14":3,"15":3,"16":3,"17":10},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/modi9/src/index.ts","sources":["/home/usuario/modi9/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * ReduceAlgorithm describes the algorithm used to reduce the data.\n */\nexport abstract class ReduceAlgorithm {\n  constructor(protected collection: number[]) {\n    this.collection = collection;\n  }\n\n  /**\n   * getCollection() returns the collection.\n   * @returns {number} collection\n   */\n  getCollection(): number[] {\n    return this.collection;\n  }\n\n  /**\n   * run() is the entry point of the algorithm.\n   * @returns {number}\n   */\n  public run() {\n    // Hook\n    this.beforeInit();\n    // Reduce\n    this.reduce();\n    // Hook\n    this.afterInit();\n  }\n\n  /**\n   * reduce() is the core of the algorithm. It must be implemented by subclasses.\n   */\n  protected abstract reduce(): number;\n  /**\n   * beforeInit() is a hook that is called before the reduce() method.\n   */\n  protected beforeInit(): void {}\n  /**\n   * afterInit() is a hook that is called after the reduce() method.\n   */\n  protected afterInit(): void {}\n}\n\n/**\n * Sum is a concrete implementation of the ReduceAlgorithm.\n */\nexport class Sum extends ReduceAlgorithm {\n  constructor(protected collection: number[]) {\n    super(collection);\n  }\n\n  /**\n   * beforeInit() is a hook that is called before the reduce() method.\n   */\n  protected beforeInit(): void {\n    console.log('Before Add');\n  }\n\n  /**\n   * afterInit() is a hook that is called after the reduce() method.\n   */\n  protected afterInit(): void {\n    console.log('After Add');\n  }\n\n  /**\n   * reduce() is the core of the algorithm.\n   * @returns {number} The sum of the collection.\n   */\n  protected reduce(): number {\n    let sum: number = 0;\n    for (let i = 0; i < this.collection.length; i++) {\n      sum += this.collection[i];\n    }\n    return sum;\n  }\n}\n\n/**\n * Substract is a concrete implementation of the ReduceAlgorithm.\n */\nexport class Substract extends ReduceAlgorithm {\n  constructor(collection: number[]) {\n    super(collection);\n  }\n\n  /**\n   * beforeInit() is a hook that is called before the reduce() method.\n   */\n  protected beforeInit(): void {\n    console.log('Before substract');\n  }\n\n  /**\n   * afterInit() is a hook that is called after the reduce() method.\n   */\n  protected afterInit(): void {\n    console.log('After substract');\n  }\n\n  /**\n   * reduce() is the core of the algorithm.\n   * @returns {number} The substract of the collection.\n   */\n  protected reduce(): number {\n    let sum: number = 0;\n    for (let i = 0; i < this.collection.length; i++) {\n      sum -= this.collection[i];\n    }\n    return sum;\n  }\n}\n\n/**\n * Product is a concrete implementation of the ReduceAlgorithm.\n */\nexport class Product extends ReduceAlgorithm {\n  constructor(collection: number[]) {\n    super(collection);\n  }\n\n  /**\n   * beforeInit() is a hook that is called before the reduce() method.\n   */\n  protected beforeInit(): void {\n    console.log('Before product');\n  }\n\n  /**\n   * afterInit() is a hook that is called after the reduce() method.\n   */\n  protected afterInit(): void {\n    console.log('After product');\n  }\n\n  /**\n   * reduce() is the core of the algorithm.\n   * @returns {number} The product of the collection.\n   */\n  protected reduce(): number {\n    let sum: number = 1;\n    for (let i = 0; i < this.collection.length; i++) {\n      sum *= this.collection[i];\n    }\n    return sum;\n  }\n}\n\n/**\n * client code that uses the algorithm.\n * @param algorithm Return the algorithm to use.\n */\nexport function clientCode(algorithm: ReduceAlgorithm) {\n  algorithm.run();\n}\n\nclientCode(new Sum([1, 2, 3, 4, 5]));\nclientCode(new Substract([1, 2, 3]));\nclientCode(new Product([1, 2]));\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6dc48fb3c7450091d0bc86e707d293b2e28998f7","contentHash":"f29165063d6c3bfa7d20afb265c121f9b5794083bfd9e159d6fcbf79b374fa31"}}